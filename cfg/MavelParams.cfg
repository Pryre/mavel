#!/usr/bin/env python
PACKAGE = "mavel"

from dynamic_reconfigure.parameter_generator_catkin import *
import math

gen = ParameterGenerator()

g_operation = gen.add_group("Operation")
g_operation.add("allow_timeout_position", bool_t, 0, "Allows timeout on position-only reference inputs", False)
g_operation.add("allow_controller_reset", bool_t, 0, "Allows for mavel to reset to the pre-armed state if system is disarmed", False)
g_operation.add("use_tracking_control", bool_t, 0, "Switches the control scheme to a tracking controller control", False)

g_control = gen.add_group("Control")
g_control.add("tilt_max", double_t, 0, "Maximum tilt angle that can be commanded (rad)", 0.39, 0.0, None)
g_control.add("throttle_min", double_t, 0, "Minimum throttle that can be commanded (%)", 0.1, 0.0, 1.0)
g_control.add("throttle_mid", double_t, 0, "Midpoint throttle required for stable hover (%)", 0.5, 0.0, 1.0)
g_control.add("throttle_max", double_t, 0, "Maximum throttle that can be commanded (%)", 0.9, 0.0, 1.0)


#gen.add("param_uav_mass_", double_t, 0, "", 1.0, 0.0, None)

g_failsafe = gen.add_group("Failsafe")
g_failsafe.add("failsafe_output_on_fatal", bool_t, 0, "Enables output of the controller if a hard failsafe is declared (default is False: mavel will stop outputting reference commands)", False)
g_failsafe.add("failsafe_land_vel", double_t, 0, "Landing velocity if input reference is lost, but odometry is still available",  -0.2, None, 0.0)

exit(gen.generate(PACKAGE, "mavel", "MavelParams"))
